!function(){"use strict";class e{constructor(e,t,r){let{name:s,link:n}=e;this._name=s,this._link=n,this._cardSelector=t,this._clickHandler=r}_setEventListeners(){this._cardElement.querySelector(".card__button-like").addEventListener("click",(()=>{this._likeHandler()})),this._cardElement.querySelector(".card__button-delete").addEventListener("click",(()=>{this._deleteHandler()})),this._cardImageElement.addEventListener("click",(()=>{this._clickHandler({name:this._name,link:this._link})}))}_likeHandler(){this._cardElement.querySelector(".card__button-like").classList.toggle("card__button-like_active")}_deleteHandler(){this._cardElement.remove()}getNewCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardImageElement.alt=this._name,this._cardImageElement.src=this._link,this._cardTitleElement.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){this._formElement.querySelector(`#${e.id}-error`).textContent=e.validationMessage,e.classList.add(this._errorClass)}_hideInputError(e){this._formElement.querySelector(`#${e.id}-error`).textContent=e.validationMessage,e.classList.remove(this._errorClass)}_checkValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_changeButtonState(){let e=!1;this._inputElements.forEach((t=>{t.validity.valid||(e=!0)})),e?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkValidity(e),this._changeButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._setEventListeners()}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&(e.preventDefault(),this.close())};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class s extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}getInputValues(){return Array.from(this._popupForm.querySelectorAll(".modal__input")).reduce(((e,t)=>({...e,[t.name]:t.value})),{})}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this.getInputValues())})),super.setEventListeners()}}const n=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],i=document.querySelector(".cards__list"),o=document.querySelector("#profile-edit-btn"),l=document.querySelector("#profile-edit-form"),a=document.querySelector("#profile-title-input"),c=document.querySelector("#profile-description-input"),u=document.querySelector("#profile-add-btn"),d=document.querySelector("#profile-add-modal").querySelector("#card-add-form"),m=(d.querySelector("#profile-add-title-input"),d.querySelector("#profile-add-url-input"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__error",errorClass:"modal__error_visible"}),p=new class extends r{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector("#card-preview-image"),this._previewTitle=this._popupElement.querySelector("#card-preview-title")}open=e=>{let{name:t,link:r}=e;this._previewImage.src=r,this._previewImage.alt=`${t}`,this._previewTitle.textContent=`${t}`,super.open()}}("#card-preview-modal");p.setEventListeners();const _=new class{constructor(e,t){let{items:r,renderer:s}=e;this._name=r.name,this._link=r.link,this._renderer=s,this._container=t}renderItems(e){e.forEach((e=>(this._renderer(e),e)))}addItem(e){this._container.prepend(e)}}({items:n,renderer:e=>{const t=v(e);_.addItem(t)}},i);_.renderItems(n);const h=new class{constructor(e){let{profileName:t,profileJob:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){this._profileName.textContent=e.name,this._profileJob.textContent=e.job}}({profileName:".profile__title",profileJob:".profile__description"}),E=new s("#profile-edit-modal",(e=>{h.setUserInfo(e),E.close()}));E.setEventListeners(),o.addEventListener("click",(()=>{const{name:e,job:t}=h.getUserInfo();a.value=e,c.value=t,E.open()}));const f=new s("#profile-add-modal",(()=>{const{title:e,url:t}=f.getInputValues(),r=v({name:e,link:t});_.addItem(r),f.close()}));function v(t){return new e(t,"#card-template",(()=>{p.open(t)})).getNewCard()}f.setEventListeners(),u.addEventListener("click",(()=>{f.open()}));const S=new t(m,l),b=new t(m,d);S.enableValidation(),b.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,